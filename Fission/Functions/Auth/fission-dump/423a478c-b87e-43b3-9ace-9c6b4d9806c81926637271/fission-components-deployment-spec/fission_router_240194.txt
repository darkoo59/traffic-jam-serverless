metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: fission
    meta.helm.sh/release-namespace: fission
  creationTimestamp: "2023-05-17T21:14:31Z"
  generation: 1
  labels:
    app.kubernetes.io/managed-by: Helm
    application: fission-router
    chart: fission-all-v1.18.0
    svc: router
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/managed-by: {}
          f:application: {}
          f:chart: {}
          f:svc: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:prometheus.io/path: {}
              f:prometheus.io/port: {}
              f:prometheus.io/scrape: {}
            f:labels:
              .: {}
              f:application: {}
              f:svc: {}
          f:spec:
            f:containers:
              k:{"name":"router"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"DEBUG_ENV"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"DISPLAY_ACCESS_LOG"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"FISSION_RESOURCE_NAMESPACES"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"OTEL_EXPORTER_OTLP_ENDPOINT"}:
                    .: {}
                    f:name: {}
                  k:{"name":"OTEL_EXPORTER_OTLP_INSECURE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"OTEL_PROPAGATORS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"OTEL_TRACES_SAMPLER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"OTEL_TRACES_SAMPLER_ARG"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POD_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                  k:{"name":"PPROF_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_ROUND_TRIP_DISABLE_KEEP_ALIVE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_ROUND_TRIP_KEEP_ALIVE_TIME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_ROUND_TRIP_MAX_RETRIES"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_ROUND_TRIP_TIMEOUT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_ROUNDTRIP_TIMEOUT_EXPONENT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_SVC_ADDRESS_MAX_RETRIES"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_SVC_ADDRESS_UPDATE_TIMEOUT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ROUTER_UNTAP_SERVICE_TIMEOUT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"USE_ENCODED_PATH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8888,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/config/config.yaml"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:subPath: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:fsGroup: {}
              f:runAsGroup: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"config-volume"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
    manager: helm
    operation: Update
    time: "2023-05-17T21:14:31Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-08-19T20:17:09Z"
  name: router
  namespace: fission
  resourceVersion: "240194"
  uid: 0f8af558-da6a-448e-b4fb-a4c20cf12217
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      application: fission-router
      svc: router
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        application: fission-router
        svc: router
    spec:
      containers:
      - args:
        - --routerPort
        - "8888"
        - --executorUrl
        - http://executor.fission
        command:
        - /fission-bundle
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ROUTER_ROUND_TRIP_TIMEOUT
          value: 50ms
        - name: ROUTER_ROUNDTRIP_TIMEOUT_EXPONENT
          value: "2"
        - name: ROUTER_ROUND_TRIP_KEEP_ALIVE_TIME
          value: 30s
        - name: ROUTER_ROUND_TRIP_DISABLE_KEEP_ALIVE
          value: "true"
        - name: ROUTER_ROUND_TRIP_MAX_RETRIES
          value: "10"
        - name: ROUTER_SVC_ADDRESS_MAX_RETRIES
          value: "5"
        - name: ROUTER_SVC_ADDRESS_UPDATE_TIMEOUT
          value: 30s
        - name: ROUTER_UNTAP_SERVICE_TIMEOUT
          value: 3600s
        - name: USE_ENCODED_PATH
          value: "false"
        - name: DEBUG_ENV
          value: "false"
        - name: PPROF_ENABLED
          value: "false"
        - name: DISPLAY_ACCESS_LOG
          value: "false"
        - name: FISSION_RESOURCE_NAMESPACES
          value: default
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        - name: OTEL_TRACES_SAMPLER
          value: parentbased_traceidratio
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "0.1"
        - name: OTEL_PROPAGATORS
          value: tracecontext,baggage
        image: index.docker.io/fission/fission-bundle:v1.18.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /router-healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 35
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: router
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8888
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /router-healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config/config.yaml
          name: config-volume
          subPath: config.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccount: fission-router
      serviceAccountName: fission-router
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: feature-config
        name: config-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-05-17T21:14:32Z"
    lastUpdateTime: "2023-05-17T21:15:59Z"
    message: ReplicaSet "router-6d9954f848" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2023-08-19T20:17:09Z"
    lastUpdateTime: "2023-08-19T20:17:09Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
